% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/safegraph_api.R
\name{safegraph_api}
\alias{safegraph_api}
\title{Download SafeGraph data from the API}
\usage{
safegraph_api(
  key,
  placekeys = NULL,
  location = NULL,
  search = NULL,
  first = 10,
  after = NULL,
  dataset = "core",
  date = NULL,
  select = NULL,
  batch = FALSE,
  display_call = FALSE,
  ...
)
}
\arguments{
\item{key}{A character string containing an API Access Key. See \url{https://docs.safegraph.com/reference/access-and-authentication} to get one.}

\item{placekeys}{A character vector of Placekeys to look up data with. If this is more than 20 Placekeys long, batching will be performed automatically as long as \code{batch = TRUE}. Cannot be longer than 1000 entries. Exactly one of \code{placekeys}, \code{address}, or \code{search} must be specified.}

\item{location}{A named vector of location data, or one-row \code{data.frame} with appropriately-named columns, that specifies a single place of interest to look up data for. Available location variable names, and the different combinations that uniquely identify a single location, are available at \url{https://docs.safegraph.com/reference/lookup-name-address}.  Exactly one of \code{placekeys}, \code{address}, or \code{search} must be specified.}

\item{search}{A named list of filter settings, where \code{'address'} may be one entry that is itself a named list, that specifies a set of filter criteria for the SafeGraph POIs. Data will be returned for the first \code{first} matches.}

\item{first}{If using \code{search}, return only the first \code{first} matches found. If set to any number above \code{20}, batching will be performed automatically if \code{batch = TRUE}. Will not accept a value above \code{1000}.}

\item{after}{If using \code{search}, skip the first \code{after} matches before returning the next \code{first} matches.}

\item{dataset}{The SafeGraph response dataset(s) to get from. Can be \code{'core'} for the SafeGraph Core data, \code{'geometry'} for geometry files, or \code{'weekly_patterns'} or \code{'monthly_patterns'} for weekly/monthly patterns data. Weekly patterns data will be the week of your choosing; monthly patterns data will always be the most recent month. Or, if using the \code{location} or \code{search} options, set to \code{'placekey'} to return only the Placekeys and not actual data (note you'll get the Placekeys anyway with all the other options). Defaults to \code{'weekly_patterns'}. See \url{https://docs.safegraph.com/reference/safegraph-response-datasets} for more information.}

\item{date}{If \code{dataset = 'weekly_patterns'}, this option is requireed. A string in \code{'YYYY-MM-DD'} format specifying the week of data you want. Can be any day in that week.}

\item{select}{A character vector with the names of the variables you want returned. Defaults to all variables in the dataset. For the list of variables in each \code{dataset}, see the "Response Objects" section on \url{https://docs.safegraph.com/reference/safegraph-response-datasets}. For variables like \code{brands}, which has sub-variables \code{brand_id} and \code{brand_name}, putting \code{brands} will get all the sub-variables, or you can just get the sub-variables by themselves.}

\item{batch}{Set to \code{TRUE} to allow for batching of results if there are more than 20 POIs being returned. Batching may be quite slow if there are a lot of matches! See the rate limiting in the Placekey API docs. Also note the 1000-per-minute rate limit, so if you decide to run multiple of your own large \code{safegraph_api} calls you may want to space them out.}

\item{display_call}{Set to \code{TRUE} to print out the API call.}

\item{...}{Currently unused}
}
\description{
THIS FUNCTION IS NOT YET FULLY OPERATIONAL AND WILL ONLY WORK FOR PLACEKEY CALLS
}
\details{
This function will allow you to make API requests of the SafeGraph API. See the documentation for the Places API here: \url{https://docs.safegraph.com/docs/places-api}.
}
\examples{

\dontrun{

# Download all the recent weekly-patterns files to the working directory
safegraph_aws(dataset = 'weekly_patterns', key = 'MYINFO', secret = 'MYOTHERINFO')

}

}
